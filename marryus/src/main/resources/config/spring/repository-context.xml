<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop.xsd
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx.xsd">
	
    <!-- properties 파일 로딩 -->
	<context:property-placeholder location="classpath:config/mybatis/db.properties" />
	
	<!-- 데이터베이스 연결 커넥션 관리 : commons-dbcp2 -->
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" 
		  destroy-method="close"
		  p:driverClassName="${jdbc.mysql.driver}"
		  p:url="${jdbc.mysql.url}"
		  p:username="${jdbc.mysql.username}"
		  p:password="${jdbc.mysql.password}"
	/>
		
	 <!-- spring에서 mybatis를 연결해서 사용하는 설정 -->	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="typeAliasesPackage" value="kr.co.marryus.repository.domain" />
		<property name="mapperLocations" value="classpath:config/sqlmap/*.xml" />
	</bean>   
	
	<!-- spring에게 Mapper 인터페이스의 위치를 알려주고 인터페이스에 해당하는 구현객체를 얻는다. -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="kr.co.marryus.repository.mapper" />
	</bean> 
	
	<!-- 트랜잭션 처리 파트 시작.. -->
	<bean id="transactionManager" 
	      class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>	
	
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<aop:pointcut id="tranPct" expression="execution(public * kr.co.marryus..service.*Impl.*(..))" />
		<!-- 공통기능 클래스와 메서드를 알수 없는 경우에는 aspect를 사용할 수 없다. 
		<aop:aspect ref="공통기능클래스">
			<aop:around method="공통기능메서드" pointcut-ref="a"/>
		</aop:aspect>
		 -->
		 <aop:advisor advice-ref="txAdvice" pointcut-ref="tranPct" />
	</aop:config>
	
</beans>















